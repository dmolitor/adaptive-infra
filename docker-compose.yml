name: adaptive_experiment

services:
  api:
    build: 
      context: ./api
      platforms: 
        - "linux/arm64"
        - "linux/amd64"
    container_name: api
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy
    image: djmolitor/adaptive_fastapi_polcand
    networks:
      - backend
      - frontend
    ports:
      - "${API_CONTAINER_PORT}:${API_HOST_PORT}"
  
  app:
    build:
      context: ./ui
      platforms: 
        - "linux/arm64"
        - "linux/amd64"
    container_name: app
    depends_on:
      database:
        condition: service_healthy
      api:
        condition: service_started
    env_file:
      - .env
    image: djmolitor/adaptive_shiny_polcand
    networks:
      - frontend
    ports:
      - "${APP_CONTAINER_PORT}:${APP_HOST_PORT}"
    develop:
      watch:
        - action: sync+restart
          path: ./ui
          target: /app

  database:
    container_name: database
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_USER: "${POSTGRES_USER}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    image: "postgres:${POSTGRES_VERSION}"
    volumes:
      - ./database:/var/lib/postgresql/data
    networks:
      - backend
    user: "${POSTGRES_USER}"

networks:
  frontend:
  backend: